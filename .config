# CONFIG

## DIRECTORY
declare -x		DIR_SRC="${DIR_BASE}/src"
declare -x		DIR_RSC="${DIR_BASE}/rsc"
declare -x		DIR_SCRIPT="${DIR_RSC}/script"
declare -x		DIR_FILE="${DIR_RSC}/file"
declare -x		DIR_LFS="${DIR_SRC}/01_lfs"
declare -x		DIR_BLFS="${DIR_SRC}/02_blfs"
declare -x		DIR_LOG="${DIR_BASE}/log"
declare -x		DIR_DOWNLOAD_CACHE="${DIR_BASE}/.sources"
declare -x		DIR_BAK="${DIR_BASE}/backup/"

## LFS
### BASE
declare -x		LFS_HOSTNAME="dot"
declare -x		LFS_ROOT_PASS="pass"
declare -x 		LFS_USER_NAME="pix"
declare -x		LFS_USER_PASS="pass"
declare -x		LFS="/mnt/lfs"
declare -x 		TARGET_DISK="/dev/sdb"
declare -x		TARGET_DISK_MAP="${TARGET_DISK_MAP:-${DIR_RSC}/default_disk_map}"

declare -x		LFS_ARCH
LFS_ARCH="$(uname -m)"
declare -x		LFS_CORES
LFS_CORES="$(nproc)"
declare -x		LFS_TGT="${LFS_ARCH}-dot-linux-gnu"
declare -x		LFS_SOURCES_DIR="${LFS}/sources"
declare -x		GIT_VERSION
GIT_VERSION="$(git rev-parse HEAD 2>/dev/null | head -c7)"

### FLAGS
# Stip all binaries
declare -x		LFS_STRIP_BINARIES=
# Do all check and test when compiling
declare -x		LFS_DO_CHECK=1
# Do partitioning and formating of target disk
declare -x 		LFS_DO_PARTITION=1
# Choose between systemd and sysvinit
declare -x		LFS_SYSTEMD=1
# Use DHCP or static IP
declare -x		LFS_NET_USE_DHCP=1
# Save get_pack meta
declare -x		GET_PACK_SAVE=1
# Check new package tarball link
declare -x		GET_PACK_CHECK_REPO=1
# Download and copy package tarball
declare -x		GET_PACK_DOWNLOAD=1
# Don't remove log file
declare -x		LOG_FILE_KEEP=1

### DISTRO
declare -x		LFS_DISTRO="Dot Linux"
declare -x		LFS_DISTRO_MINI="dot"
declare -x		LFS_DISTRO_CONTACT="Pixailz1@gmail.com"
declare -x 		LFS_DISTRO_DESC="${LFS_DISTRO}"
declare -x		LFS_DISTRO_CODENAME="dot"
declare -x		LFS_DISTRO_VERSION="0.0.3"
declare -x		LFS_DISTRO_HOME="https://github.com/Pixailz/dot_mngr"

### NETWORK
declare -x		LFS_NET_INTERFACE="enp0s3"
declare -x		LFS_NET_STATIC_IP="192.168.1.190"
declare -x		LFS_NET_STATIC_GATE="192.168.1.254"
declare -x		LFS_NET_STATIC_BROA="192.168.1.255"
declare -x		LFS_NET_STATIC_PREF="24"
declare -x		LFS_NET_DNS_PRI="8.8.8.8"
declare -x		LFS_NET_DNS_SEC="8.8.4.4"

### TIME
declare -x		LFS_CLOCK_UTC=0
declare -x		LFS_CLOCKPARAMS=
declare -x		LFS_TZ="Europe/Paris"
declare -x		LFS_LOCALE_LANG="en_US.utf8"

### CONSOLE
declare -x		LFS_CONSOLE_UNICODE=1
declare -x		LFS_CONSOLE_FONT="ter-v16b"
declare -x		LFS_CONSOLE_KEYMAP="us"
declare -x		LFS_CONSOLE_LOGLVL="7"

### ROOT
declare -x 		LFS_ROOT_GROUP="wheel"

## LOG
declare -x		LOG_TITLE_SIZE="30"
declare -x		LOG_FILE_EXEC="${DIR_BASE}/exec.log"

declare -x		LFS_BAK_ID="${GIT_VERSION:+-${GIT_VERSION}}"
declare -x		LFS_BAK_PREFIX="kernel-improved"
declare -x		DIR_BAK+="${LFS_DISTRO_MINI}-${LFS_DISTRO_VERSION}${LFS_BAK_ID}"
declare -x		LFS_BAK_META="${DIR_BAK}/${LFS_BAK_PREFIX}.snar"
declare -x		LFS_BAK_EXT=".tar.gz"

## OTHER
declare -x		TARGET_SWAP_SIZE="2G"
declare -x		DAEMON_REFRESH_RATE=0.05

### LIFOVAR
declare -xa		LIFOVAR_LOG_LVL=(0)
declare -xa		LIFOVAR_STEP_ID=(0)
declare -xa		LIFOVAR_STEP_ID_MAX=(0)

# AUTO
## OTHER
declare -xgA	STEP
declare -x		STEP_FILE="${DIR_BASE}/step"
declare -x		SBU_FILE="${DIR_BASE}/SBU"
declare -x		DAEMON_OUT
DAEMON_OUT="$(mktemp /tmp/.daemon_out.XXXXXXXXXX)"
declare -x 		DAEMON_WAIT_FILE
DAEMON_WAIT_FILE="$(mktemp -u /tmp/.daemon_wait.XXXXXXXXXX)"
declare -x		SCREEN_SIZE
SCREEN_SIZE="$(mktemp /tmp/.screen_size.XXXXXXXXXX)"

# source needed files
source "${DIR_BASE}/src/include"

declare -x		MAKEFLAGS="-j${LFS_CORES}"
declare -x		LFS_VMLINUZ="vmlinuz"
declare -x		LFS_VMLINUZ_SUFFIX="${LFS_DISTRO_CODENAME}"

set +h
umask 022

declare -xA		BLFS_TODO=(
	# SECURITY
	["make-ca"]=1
	["cracklib"]=1
	["cryptsetup"]=1
	["cyrus-sasl"]=1
	["gnupg"]=1
	["gpgme"]=1
	["iptables"]=1
	["linux-pam"]=1
	["liboauth"]=1
	["libpwquality"]=1
	["mit-kerberos5"]=1
	["nettle"]=1
	["nss"]=1
	["openssh"]=1
	["p11-kit"]=1
	["sudo"]=1
)

# KERBEROS CONFIG
declare -x KERB_FQND="example.org"
declare -x KERB_FQND_UPPER="${KERB_FQND^^}"
declare -x KERB_FQND_ADMIN="belgarath.example.org"

if [ "${LOG_FILE_KEEP:-0}" == "0" ]; then
	: > "${LOG_FILE_EXEC}"
fi
