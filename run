#!/bin/bash

# BASH PROPRETIES
## Exit immediately if a command exits with a non-zero status
set -e
## Treat unset variables as an error when substituting
set -u
## Error in pipeline will be shown
set -o pipefail

# RUNASROOT
[ "${UID}" != "0" ] && { echo "Error: run as root"; exit 1; }

# Config
## cli args
: ${TARGET_DISK:?"Error: missing Disk Device"}

declare -x PATH_BASE=$(realpath ${BASH_SOURCE[0]})
declare -x DIR_BASE=${PATH_BASE%/*}
declare -x DIR_SRC="${DIR_BASE}/src"
declare -x DIR_LFS="${DIR_SRC}/01_lfs"

declare -xa	LOG_LVL=(0)
declare -x	LOG_FILE_KEEP=0
declare -x	LOG_FILE="${DIR_BASE}/exec.log"
declare -x	SBU_FILE="${DIR_BASE}/SBU"
declare -x	SBU_EST_SIZE="30"

## LFS
declare -x LFS="/mnt/lfs"
declare -x LFS_ARCH=$(uname -m)
declare -x LFS_CORES=$(nproc)
declare -x LFS_TGT=${LFS_ARCH}-lfs-linux-xnu
declare -x LFS_HOSTNAME="brda-sil"
declare -x LFS_SOURCES_DIR="${LFS}/sources"
declare -x LFS_ROOT_PASS="pass"
declare -x LFS_STRIP_BINARIES=
declare -x LFS_DNS_PRIMARY="8.8.8.8"
declare -x LFS_DNS_SECONDARY="8.8.4.4"
declare -x LFS_CLOCK_UTC=0
declare -x LFS_CLOCKPARAMS=""
declare -x LFS_TZ="Europe/Paris"
declare -x LFS_CONSOLE_UNICODE=1
declare -x LFS_CONSOLE_FONT="Lat2-Terminus16"
declare -x LFS_RC_SITE_DISTRO="Linux From Scratch"
declare -x LFS_RC_SITE_DISTRO_CONTACT="lfs-dev@lists.linuxfromscratch.org"
declare -x LFS_RC_SITE_DISTRO_MINI="LFS"
declare -x LFS_LOCALE_LANG="en_US.utf8"
declare -x LFS_KERNEL_DEFCONF="arch/x86/configs/x86_64_defconfig"
declare -x LFS_CODENAME="brda-sil"
declare -x LFS_VERSION="12.1"

# source needed files
source ${DIR_BASE}/src/include

set +h
umask 022
LC_ALL=POSIX
PATH=/usr/bin:/usr/sbin
if [ ! -L /bin ]; then PATH=/bin:${PATH}; fi
PATH=${LFS}/tools/bin:${PATH}
CONFIG_SITE=/usr/share/config.site
export MAKEFLAGS="-j${LFS_CORES}"

function	prepare()
{
	checkup
	partition
	mount_lfs
	download_sources
	chown -v root:root -R ${LFS_SOURCES_DIR}
	create_minimal_fhs
}

function	cross_toolchain()
{
	export MAKEFLAGS="-j1"
	compile_binutils_pass1
	export MAKEFLAGS="-j${LFS_CORES}"
	compile_gcc_pass1
	fix_linux_headers
	export MAKEFLAGS="-j1"
	compile_glibc_pass1
	export MAKEFLAGS="-j${LFS_CORES}"
	compile_libstdcxx
}

function	temp_tool()
{
	compile_m4_pass1
	compile_ncurses_pass1
	compile_bash_pass1
	compile_coreutils_pass1
	compile_diffutils_pass1
	compile_file_pass1
	compile_findutils_pass1
	compile_gawk_pass1
	compile_grep_pass1
	compile_gzip_pass1
	compile_make_pass1
	compile_patch_pass1
	compile_sed_pass1
	compile_tar_pass1
	compile_xz_pass1
	compile_binutils_pass2
	compile_gcc_pass2
}

function	chroot_additional_tool()
{
	change_ownership
	create_virtualfs
	create_full_fhs
	essential_file
	compile_gettext_pass1
	compile_bison_pass1
	compile_perl_pass1
	compile_python_pass1
	compile_texinfo_pass1
	compile_util_linux_pass1
}

function	basic_system_soft()
{
	compile_man_pages
	compile_iana_etc
	compile_glibc_pass2
	compile_zlib
	compile_bzip2
	compile_xz_pass2
	compile_zstd
	compile_file_pass2
	compile_readline
	compile_m4_pass2
	compile_bc
	compile_flex
	compile_tcl
	compile_expect
	compile_dejagnu
	compile_pkgconf
	compile_binutils_pass3
	compile_gmp
	compile_mpfr
	compile_mpc
	compile_attr
	compile_acl
	compile_libcap
	compile_libxcrypt
	compile_shadow
	compile_gcc_pass3
	compile_ncurses_pass2
	compile_sed_pass2
	compile_psmisc
	compile_gettext_pass2
	compile_bison_pass2
	compile_grep_pass2
	compile_bash_pass2
	compile_libtool
	compile_gdbm
	compile_gperf
	compile_expat
	compile_inetutils
	compile_less
	compile_perl_pass2
	compile_xml_parser
	compile_intltool
	compile_autoconf
	compile_automake
	compile_openssl
	compile_kmod
	compile_libelf
	compile_libffi
	compile_python_pass2
	compile_flit_core
	compile_wheel
	compile_setuptools
	compile_ninja
	compile_meson
	compile_coreutils_pass2
	compile_check
	compile_diffutils_pass2
	compile_gawk_pass2
	compile_findutils_pass2
	compile_groff
	compile_grub
	compile_gzip_pass2
	compile_iproute2
	compile_kbd
	compile_libpipeline
	compile_make_pass2
	compile_patch_pass2
	compile_tar_pass2
	compile_texinfo_pass2
	compile_vim
	compile_markupsafe
	compile_jinja2
	compile_udev
	compile_man_db
	compile_procps_ng
	compile_util_linux_pass2
	compile_e2fsprogs
	compile_sysklogd
	compile_sysvinit
	[ "${LFS_STRIP_BINARIES:-0}" != "0" ] && strip_binaries || pinfo "Stripping binaries skipped"
	clean_basic_soft
}

function	system_config()
{
	lfs_boot_script
	configure_devices
	configure_network "enp0s3" 192.168.1.{190,254,255} "24"
	configure_dns
	chroot_line "echo '${LFS_HOSTNAME}'" /etc/hostname 1
	configure_sysvinit
	configure_clock
	configure_console
	configure_rc_site
	configure_locale
	configure_inputrc
	configure_shells
}

function	make_system_bootable()
{
	configure_fstab
	compile_linux
	configure_grub
	finish_touch
}

function	do_lfs()
{
	prepare
	cross_toolchain
	temp_tool
	chroot_additional_tool
	basic_system_soft
	system_config
	make_system_bootable
	backup_lfs "bootable"
}

[ "${LOG_FILE_KEEP:-0}" == "0" ] && : > ${LOG_FILE}

set_sbu
get_summary

do_lfs

unset ${!LFS_@} ${!DIR_@} ${!LOG_@} ${!SBU_@} \
	PATH_BASE LC_ALL CONFIG_SITE MAKEFLAGS

exit $?
