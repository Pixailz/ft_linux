#!/bin/bash

# FUNCTIONS
## GNU_UTILS
function	_rm()
{ [ -e "${1}" ] && rm -rf "${1}" || true; }

function	_mkdir()
{ [ ! -d "${1}" ] && _rm "${1}"; mkdir -p "${1}" || true ; }

function	take()
{ _mkdir ${1}; _pushd ${1}; }

function	_cp()
{ cp -f ${@}; }

function	_ln()
{ ln -f ${@}; }

function	_mv()
{ mv -f ${@}; }

function	_tar()
{ tar ${@}; }

function	_pushd()
{ pushd ${1}; }

function	_popd()
{
	local	n=${1:-1}

	for ((i = 0; i < n; i++)); do
		popd
	done
}

function	package_get_src_file()
{ echo ${LFS_SOURCES_DIR}/${PACKAGE_FILE[${1}]}; }

function	package_get_dst_dir()
{ echo ${LFS_SOURCES_DIR}/${PACKAGE_TAR_FOLDER[${1}]}; }

function	package_decompress()
{
	pinfo "Decompressing ${src_file}..."
	_tar -xf ${src_file} -C ${LFS_SOURCES_DIR}
	ppass "Decompressed"
}

function	package_init()
{
	declare -g package="${1}"
	declare -g package_sbu=${2:-}
	declare -g package_pass=${3:-1}
	declare -g package_version="${PACKAGE_VERSION[${package}]}"
	declare -g package_file="${PACKAGE_FILE[${package}]}"
	declare -g package_tar_folder="${PACKAGE_TAR_FOLDER[${package}]}"
	declare -g src_file="$(package_get_src_file ${package})"
	declare -g dst_folder="$(package_get_dst_dir ${package})"
	local	fmt_building="Building ${package}"
	local	fmt_pass="pass ${package_pass}"
	local	fmt_sbu=

	if [ "${package_sbu}" == "" ]; then
		fmt_sbu="and getting SBU"
	elif [ "${package_sbu}" == "0" ]; then
		fmt_sbu="with sbu less than 0.1 ($(get_sbu 0.05))"
	else
		fmt_sbu="with SBU ${package_sbu} ($(get_sbu ${package_sbu}))"
	fi
	[ "${4:-0}" != "0" ] && _rm "${dst_folder}" || true
	package_decompress
	pinfo "${fmt_building} ${fmt_pass} ${fmt_sbu}"
}

function	package_clean()
{
	local	fmt_building="Builded ${package}"
	local	fmt_version="Version ${PACKAGE_VERSION[${package}]}"
	local	fmt_pass="pass ${package_pass}"

	ppass "${fmt_building} ${fmt_version} ${fmt_pass}"
	_rm ${dst_folder}
	unset package sbu pass src_file dst_folder
}
