#!/bin/bash

# FUNCTIONS
function	_mkdir()
{ [ ! -d "${1}" ] && rm -vrf "${1}"; mkdir -vp "${1}"; }

function	take()
{ _mkdir ${1}; pushd ${1}; }

function	_printf()
{
	printf "[\e[33m%s\e[0m] " "$(date '+%d/%M/%Y %T')" >> ${LOG_FILE}
	printf "%b %b\n" "${1}" "${2}" | tee -a ${LOG_FILE}
}

function	ppass()
{ _printf "[\e[32m+\e[0m]" "${@}"; }

function	pfail()
{ _printf "[\e[31m-\e[0m]" "${@}"; }

function	pwarn()
{ _printf "[\e[31m!\e[0m]" "${@}"; }

function	pinfo()
{ _printf "[\e[34m*\e[0m]" "${@}"; }

function	set_sbu()
{
	local	sbu=()
	local	total=0
	if [ "${1:-}" != ""  ]; then
		sbu+=(${1})
		ppass "added new SBU ${1}"
		echo "${sbu}" >> ${DIR_BASE}/SBU
	fi
	sbu+=($(cat ${DIR_BASE}/SBU))

	for ((i = 0; i < ${#sbu[@]}; i++)); do
		total=$((total + sbu[i]))
	done
	export SBU=$((${total} / ${#sbu[@]}))
	pinfo "SBU from this run and previous one is \e[32m${SBU}\e[0ms"
}

function	get_sbu()
{
	local	n="$(bc -l <<<"scale=0; ${1} * ${SBU:-1}")"
	local	dec="${n#*.}"
	local	int="${n/.*/}"
	local	hour="$((${int} / 3600))"
	local	minute="$(((${int} / 60) % 60))"
	local	second="$((${int} % 60))"

	if [ "${hour}" -gt 0 ]; then printf "%sh" "${hour}"; fi
	if [ "${minute}" -gt 0 ]; then printf "%02dm" "${minute}"; fi
	if [ "${second}" -gt 0 ]; then printf "%02ds" "${second}"; fi
}

function	do_chroot()
{
	sudo chroot "/mnt/lfs" /usr/bin/env -i \
		HOME=/root \
		TERM="${TERM}" \
		PS1='(lfs chroot) \u:\w\$ ' \
		PATH=/usr/bin:/usr/sbin \
		MAKEFLAGS="-j${LFS_CORES}" \
		TESTSUITEFLAGS="-j${LFS_CORES}" \
		/bin/bash <<<${@}
}

function	chroot_line()
{
	local	line="${1}"
	local	file="${2}"
	local	replace="${3:-0}"
	if [ "${replace}" == "1" ]; then
		replace=">"
	else
		replace=">>"
	fi

	sudo chroot "/mnt/lfs" /usr/bin/env -i \
		HOME=/root \
		TERM="${TERM}" \
		PS1='(lfs chroot) \u:\w\$ ' \
		PATH=/usr/bin:/usr/sbin \
		MAKEFLAGS="-j${LFS_CORES}" \
		TESTSUITEFLAGS="-j${LFS_CORES}" \
		/usr/bin/bash <<<"echo '${line}' ${replace} ${file}"
}
