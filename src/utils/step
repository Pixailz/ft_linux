#!/usr/bin/bash

function	step_get_var()
{
	sed -nE "s/^declare -x STEP_${1}=(.*)$/\1/p" "${STEP_FILE}"
}

function	step_set_var()
{
	pinfo "Saving last step for ${1} ($((${2} - 1)) -> ${2})"
	sed -i "s/^declare -x STEP_${1}=.*$/declare -x STEP_${1}=${2}/g" "${STEP_FILE}"
}

function	step_setup()
{
	local	step="STEP_${1}"

	if ! grep -q "${step}=" "${STEP_FILE}" 2>/dev/null; then
		echo "declare -x ${step}=0" >> "${STEP_FILE}"
	fi
	STEP["${1}"]="$(step_get_var "${1}")"
	STEP["STEP_${1}"]="0"
}

function	step_setup_file()
{
	[ -d "${STEP_FILE}" ] && rm -vrf "${STEP_FILE}"

	step_setup "LFS"
	step_setup "LFS_PREPARE"
	step_setup "LFS_CROSS_TOOLCHAIN"
	step_setup "LFS_TEMP_TOOL"
	step_setup "LFS_CHROOT_ADDITIONAL_TOOL"
	step_setup "LFS_BASIC_SYSTEM_SOFT"
	step_setup "LFS_SYSTEM_CONFIG_SYSVINIT"
	step_setup "LFS_SYSTEM_CONFIG_SYSTEMD"
	step_setup "LFS_MAKE_SYSTEM_BOOTABLE"
	step_setup "BLFS"
	step_setup "BLFS_POST_LFS"
}

function	step_set_daemon_status()
{
	local	tmp=""

	for i in "${!LIFOVAR_STEP_ID[@]}"; do
		[ "${i}" == 0 ] && continue
		local	id_color=$((i % 6 + 1))
		local	value=${LIFOVAR_STEP_ID[${i}]}
		tmp+="${BOL}${CSI}3${id_color}m${value}${RST}${RST_BOL} "
		tmp+="${BOL}(${RST_BOL}${GRE}${2}${RST}${BOL}/${RST_BOL}"
		tmp+="${RED}${LIFOVAR_STEP_ID_MAX[${i}]}${RST}${BOL})${RST_BOL}: "
	done
	dset "${tmp}${BOL}${YEL}${1}${RST}${RST_BOL}"
}

function	step_do()
{
	local	id="${LIFOVAR_STEP_ID[*]: -1}"
	local	step_i="$((${STEP[STEP_${id}]} + 1))"

	step_set_daemon_status "${1}" "${step_i}"

	if [ "${STEP[STEP_${id}]}" -ge "${STEP[${id}]:-0}" ]; then
		${1} "${@:2}" 2>&1 | tee -a "${DIR_LOG}/${1}.log"
		STEP["${id}"]="${step_i}"
		step_set_var "${id}" "${step_i}"
	fi
	STEP["STEP_${id}"]="${step_i}"
}
