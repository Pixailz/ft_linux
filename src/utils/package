#!/usr/bin/bash

function	package_get_src_file()
{ echo "${LFS_SOURCES_DIR}/${PACKAGE_FILE[${1}]}"; }

function	package_get_dst_dir()
{ echo "${LFS_SOURCES_DIR}/${PACKAGE_TAR_FOLDER[${1}]}"; }

function	package_decompress()
{
	pinfo "Decompressing ${src_file}..."
	_tar -xf "${src_file}" -C "${LFS_SOURCES_DIR}"
	ppass "Decompressed"
}

function	package_init()
{
	declare -xg package="${1}"
	declare -xg package_sbu=${2:-}
	declare -xg package_pass=${3:-1}
	declare -xg package_version="${PACKAGE_VERSION[${package}]}"
	declare -xg package_file="${PACKAGE_FILE[${package}]}"
	declare -xg package_tar_folder="${PACKAGE_TAR_FOLDER[${package}]}"
	declare -xg src_file
	src_file="$(package_get_src_file "${package}")"
	declare -xg dst_folder
	dst_folder="$(package_get_dst_dir "${package}")"
	local	fmt_building="Building ${package}"
	local	fmt_pass="pass ${package_pass}"
	local	fmt_sbu=""

	if [ "${BLFS_TODO_CHECK:-0}" == "1" ] && blfs_todo "${package}"; then
		pinfo "Skipping ${package}"
		return 0
	fi

	if [ "${package_sbu}" == "" ]; then
		fmt_sbu="and getting SBU"
	elif [ "${package_sbu}" == "0" ]; then
		fmt_sbu="with sbu less than 0.1 ($(get_sbu 0.05))"
	else
		fmt_sbu="with SBU ${package_sbu} ($(get_sbu "${package_sbu}"))"
	fi

	if [ "${4:-0}" != "0" ]; then _rm "${dst_folder}"; fi
	package_decompress
	pinfo "${fmt_building} ${fmt_pass} ${fmt_sbu}"
	return 1
}

function	package_clean()
{
	local	fmt_building="Builded ${package}"
	local	fmt_version="Version ${PACKAGE_VERSION[${package}]}"
	local	fmt_pass="pass ${package_pass}"

	ppass "${fmt_building} ${fmt_version} ${fmt_pass}"
	_rm "${dst_folder}"
	unset package sbu pass src_file dst_folder
}
