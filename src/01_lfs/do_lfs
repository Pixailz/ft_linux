#!/usr/bin/bash

function	lfs_01_prepare()
{
	step_id_push "LFS_PREPARE" 3
	step_do checkup
	step_do partition_lfs
	step_do dot_mngr_info
	lfs_mount
	step_do create_minimal_fhs
	chown -v root:root -R "${LFS_SOURCES_DIR}"
	step_id_pop
}

function	lfs_02_cross_toolchain()
{
	step_id_push "LFS_CROSS_TOOLCHAIN" 5
	start=$(date +%s)
	step_do dot_mngr_install 1_binutils
	end=$(date +%s)
	set_sbu "$((end - start))"
	unset start end
	step_do dot_mngr_install 1_gcc
	step_do dot_mngr_install 1_linux-headers
	step_do dot_mngr_install 1_glibc
	step_do dot_mngr_install 1_libstdcxx
	step_id_pop
}

function	lfs_03_temp_tool()
{
	step_id_push "LFS_TEMP_TOOL" 17
	step_do dot_mngr_install 1_m4
	step_do dot_mngr_install 1_ncurses
	step_do dot_mngr_install 1_bash
	step_do dot_mngr_install 1_coreutils
	step_do dot_mngr_install 1_diffutils
	step_do dot_mngr_install 1_file
	step_do dot_mngr_install 1_findutils
	step_do dot_mngr_install 1_gawk
	step_do dot_mngr_install 1_grep
	step_do dot_mngr_install 1_gzip
	step_do dot_mngr_install 1_make
	step_do dot_mngr_install 1_patch
	step_do dot_mngr_install 1_sed
	step_do dot_mngr_install 1_tar
	step_do dot_mngr_install 1_xz
	step_do dot_mngr_install 2_binutils
	step_do dot_mngr_install 2_gcc
	step_id_pop
}

function	lfs_04_chroot_additional_tool()
{
	step_id_push "LFS_CHROOT_ADDITIONAL_TOOL" 10
	step_do change_ownership
	step_do create_full_fhs
	step_do essential_file
	step_do dot_mngr_install 1_gettext
	step_do dot_mngr_install 1_bison
	step_do dot_mngr_install 1_perl
	step_do dot_mngr_install 1_python3
	step_do dot_mngr_install 1_texinfo
	step_do dot_mngr_install 1_linux-util
	step_do clean_temp_lfs
	step_id_pop
}

function	lfs_05_basic_system_soft()
{
	# local	max_step=80
	local	max_step=1000
	# [ "${LFS_SYSTEMD:-0}" == "0" ] || max_step=79
	step_id_push "LFS_BASIC_SYSTEM_SOFT" "${max_step}"
	step_do dot_mngr_install 1_man-pages
	step_do dot_mngr_install 1_iana-etc
	step_do dot_mngr_install 2_glibc
	step_do configure_glibc_pass2
	step_do dot_mngr_install 1_zlib
	step_do dot_mngr_install 1_bzip2
	step_do dot_mngr_install 2_xz
	step_do dot_mngr_install 1_zstd
	step_do dot_mngr_install 2_file
	step_do dot_mngr_install 1_readline
	step_do dot_mngr_install 2_m4
	step_do dot_mngr_install 1_bc
	step_do dot_mngr_install 1_flex
	step_do dot_mngr_install 1_tcl
	step_do dot_mngr_install 1_expect
	step_do dot_mngr_install 1_dejagnu
	step_do dot_mngr_install 1_pkgconf
	step_do dot_mngr_install 3_binutils
	step_do dot_mngr_install 1_gmp
	step_do dot_mngr_install 1_mpfr
	step_do dot_mngr_install 1_mpc
	step_do dot_mngr_install 1_attr
	step_do dot_mngr_install 1_acl
	step_do dot_mngr_install 1_libcap
	step_do dot_mngr_install 1_libxcrypt
	step_do dot_mngr_install 1_shadow
	step_do dot_mngr_install 3_gcc
	step_do dot_mngr_install 2_ncurses
	step_do dot_mngr_install 2_sed
	step_do dot_mngr_install 1_psmisc
	step_do dot_mngr_install 2_gettext
	step_do dot_mngr_install 2_bison
	step_do dot_mngr_install 2_grep
	step_do dot_mngr_install 2_bash
	step_do dot_mngr_install 1_libtool
	step_do dot_mngr_install 1_gdbm
	step_do dot_mngr_install 1_gperf
	step_do dot_mngr_install 1_expat
	step_do dot_mngr_install 1_inetutils
	step_do dot_mngr_install 1_less
	step_do dot_mngr_install 2_perl
	step_do dot_mngr_install 1_xml-parser
	step_do dot_mngr_install 1_intltool
	step_do dot_mngr_install 1_autoconf
	step_do dot_mngr_install 1_automake
	step_do dot_mngr_install 1_openssl
	step_do dot_mngr_install 1_kmod
	step_do dot_mngr_install 1_elfutils
	step_do dot_mngr_install 1_libffi
	step_do dot_mngr_install 2_python3
	step_do configure_python3_pass2
	step_do dot_mngr_install 1_flit-core
	step_do dot_mngr_install 1_wheel
	step_do dot_mngr_install 1_setuptools
	step_do dot_mngr_install 1_ninja
	step_do dot_mngr_install 1_meson
	step_do dot_mngr_install 2_coreutils
	step_do dot_mngr_install 1_check
	step_do dot_mngr_install 2_diffutils
	step_do dot_mngr_install 2_gawk
	step_do dot_mngr_install 2_findutils
	step_do dot_mngr_install 1_groff
	step_do dot_mngr_install 1_grub
	step_do dot_mngr_install 2_gzip
	step_do dot_mngr_install 1_iproute2
	step_do dot_mngr_install 1_kbd
	step_do dot_mngr_install 1_libpipeline
	step_do dot_mngr_install 2_make
	step_do dot_mngr_install 2_patch
	step_do dot_mngr_install 2_tar
	step_do dot_mngr_install 2_texinfo
	step_do dot_mngr_install 1_vim
	step_do configure_vim_pass1
	step_do dot_mngr_install 1_markup-safe
	step_do dot_mngr_install 1_jinja2

	if [ "${LFS_SYSTEMD:-0}" == "0" ]; then
		step_do dot_mngr_install 1_udev
	else
		step_do dot_mngr_install 1_systemd
		step_do dot_mngr_install 1_dbus
	fi
	step_do dot_mngr_install 1_man-db
	step_do dot_mngr_install 1_procps-ng
	step_do dot_mngr_install 2_linux-util
	step_do dot_mngr_install 1_e2fsprogs
	if [ "${LFS_SYSTEMD:-0}" == "0" ]; then
		step_do dot_mngr_install 1_sysklogd
		step_do configure_sysklogd
		step_do dot_mngr_install 1_sysvinit
	fi
	if [ "${LFS_STRIP_BINARIES:-0}" != "0" ]; then
		strip_binaries
	else
		pinfo "Stripping binaries skipped"
	fi
	step_do clean_basic_soft
	step_id_pop
}

function	lfs_06_system_config_systemd()
{
	step_id_push "LFS_SYSTEM_CONFIG_SYSTEMD" 8
	step_do configure_network_systemd
	step_do configure_dns
	echo "${LFS_HOSTNAME}" > "${LFS}/etc/hostname"
	step_do configure_clock_systemd
	step_do install_fonts
	step_do configure_console_systemd
	step_do configure_locale
	step_do configure_inputrc
	step_do configure_shells
	step_id_pop
}

function	lfs_06_system_config_sysvinit()
{
	step_id_push "LFS_SYSTEM_CONFIG_SYSVINIT" 12
	step_do lfs_boot_script
	step_do configure_devices
	step_do configure_network_sysvinit
	step_do configure_dns
	echo "${LFS_HOSTNAME}" > "${LFS}/etc/hostname"
	step_do configure_sysvinit
	step_do configure_clock_sysvinit
	step_do install_fonts
	step_do configure_console_sysvinit
	step_do configure_rc_site
	step_do configure_locale
	step_do configure_inputrc
	step_do configure_shells
	step_id_pop
}

function	lfs_06_system_config()
{
	if [ "${LFS_SYSTEMD:-0}" == "0" ]; then
		lfs_06_system_config_sysvinit
	else
		lfs_06_system_config_systemd
	fi
}

function	lfs_07_make_system_bootable()
{
	step_id_push "LFS_MAKE_SYSTEM_BOOTABLE" 5
	step_do configure_fstab
	export DISTRO_CODENAME="${LFS_DISTRO_CODENAME}"
	export VMLINUZ="${LFS_VMLINUZ}"
	step_do dot_mngr_install 1_linux
	step_do configure_linux
	step_do configure_grub
	step_do finish_touch
	step_id_pop
}

function	do_lfs()
{
	step_id_push "LFS" 11
	step_do lfs_01_prepare
	lfs_mount
	step_do lfs_02_cross_toolchain
	step_do lfs_03_temp_tool
	lfs_virtualfs_enable
	step_do lfs_04_chroot_additional_tool
	lfs_virtualfs_enable
	step_do lfs_05_basic_system_soft
	step_do backup_lfs "base_system"
	step_do lfs_06_system_config
	step_do lfs_07_make_system_bootable
	step_do save_log
	step_id_pop
}
